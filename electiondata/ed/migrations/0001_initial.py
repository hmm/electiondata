# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import electiondata.ed.models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alliance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('identifier', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='AllianceNominator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('alliance', models.ForeignKey(related_name='nominators', to='ed.Alliance')),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatype', models.CharField(max_length=1, choices=[(b'A', b'\xc3\x84\xc3\xa4nestysalue'), (b'K', b'Kunta'), (b'V', b'Vaalipiiri'), (b'M', b'Koko maa')])),
                ('identifier', models.CharField(max_length=4)),
                ('abbreviation', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=40)),
                ('is_city', models.BooleanField()),
                ('languages', models.CharField(max_length=1, null=True, choices=[(b'1', b'Suomi'), (b'2', b'Ruotsi'), (b'3', b'Suomi+Ruotsi'), (b'4', b'Ruotsi+Suomi')])),
                ('polling_districts', models.IntegerField(default=0)),
                ('number_to_be_elected', models.IntegerField(null=True)),
                ('joined_to', models.ForeignKey(related_name='joined_areas', to='ed.Area', null=True)),
                ('parent', models.ForeignKey(related_name='children', to='ed.Area', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatxt', models.CharField(max_length=80)),
                ('nominatortxt', models.CharField(max_length=80)),
                ('candidate_number', models.CharField(max_length=4)),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('gender', models.CharField(max_length=1, choices=[(b'1', b'Male'), (b'2', b'Female')])),
                ('age', models.IntegerField()),
                ('occupation', models.CharField(max_length=120, null=True)),
                ('language', models.CharField(max_length=2, null=True)),
                ('home_municipality_name', models.CharField(max_length=40, null=True)),
                ('total_votes', models.IntegerField()),
                ('advance_votes', models.IntegerField()),
                ('electionday_votes', models.IntegerField()),
                ('total_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('advance_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('electionday_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('elected_information', models.IntegerField(choices=[(1, b'Elected'), (2, b'Substitute'), (3, b'Not elected')])),
                ('comparative_index', models.DecimalField(max_digits=12, decimal_places=3)),
                ('position', models.IntegerField()),
                ('area', models.ForeignKey(related_name='candidates', to='ed.Area')),
                ('home_municipality', models.ForeignKey(related_name='candidatesfrom', to='ed.Area', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateMembership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('candidate', models.ForeignKey(related_name='memberships', to='ed.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateResults',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatxt', models.CharField(max_length=80)),
                ('nominatortxt', models.CharField(max_length=80)),
                ('candidatetxt', models.CharField(max_length=80)),
                ('total_votes', models.IntegerField()),
                ('advance_votes', models.IntegerField()),
                ('electionday_votes', models.IntegerField()),
                ('total_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('advance_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('electionday_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('elected_information', models.IntegerField(null=True, choices=[(1, b'Elected'), (2, b'Substitute'), (3, b'Not elected')])),
                ('comparative_index', models.DecimalField(null=True, max_digits=12, decimal_places=3)),
                ('position', models.IntegerField(null=True)),
                ('area', models.ForeignKey(related_name='candidateresults', to='ed.Area')),
                ('candidate', models.ForeignKey(related_name='candidateresults', to='ed.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='ComparisonElection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('abbreviation', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('electiontype', models.CharField(max_length=3, choices=[(b'PV', b'Presidentinvaali'), (b'E', b'Eduskuntavaalit'), (b'K', b'Kunnallisvaalit'), (b'EPV', b'Europarlamenttivaalit')])),
                ('timestamp', models.CharField(max_length=15)),
                ('phase', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Nominator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('identifier', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=80)),
                ('abbreviation', models.CharField(max_length=10)),
                ('total_votes', models.IntegerField()),
                ('advance_votes', models.IntegerField()),
                ('electionday_votes', models.IntegerField()),
                ('total_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('advance_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('electionday_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('seats', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NominatorResults',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatxt', models.CharField(max_length=80)),
                ('nominatortxt', models.CharField(max_length=80)),
                ('total_votes', models.IntegerField()),
                ('advance_votes', models.IntegerField()),
                ('electionday_votes', models.IntegerField()),
                ('total_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('advance_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('electionday_pct', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('seats', models.IntegerField()),
                ('area', models.ForeignKey(related_name='nominatorresults', to='ed.Area')),
                ('nominator', models.ForeignKey(related_name='nominatorresults', to='ed.Nominator')),
            ],
        ),
        migrations.CreateModel(
            name='VotingData',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatxt', models.CharField(max_length=80)),
                ('eligible_total', models.IntegerField()),
                ('eligible_men', models.IntegerField()),
                ('eligible_women', models.IntegerField()),
                ('eligible_finland_total', models.IntegerField()),
                ('eligible_finland_men', models.IntegerField()),
                ('eligible_finland_women', models.IntegerField()),
                ('total_turnout', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('advance_turnout', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('electionday_turnout', electiondata.ed.models.PctField(max_digits=5, decimal_places=1)),
                ('total_finland_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('advance_finland_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('electionday_finland_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('total_abroad_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('advance_abroad_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('electionday_abroad_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('total_votes', models.IntegerField()),
                ('advance_votes', models.IntegerField()),
                ('electionday_votes', models.IntegerField()),
                ('total_males_votes', models.IntegerField()),
                ('advance_males_votes', models.IntegerField()),
                ('electionday_males_votes', models.IntegerField()),
                ('total_finland_votes', models.IntegerField()),
                ('advance_finland_votes', models.IntegerField()),
                ('electionday_finland_votes', models.IntegerField()),
                ('total_finland_males_votes', models.IntegerField()),
                ('advance_finland_males_votes', models.IntegerField()),
                ('electionday_finland_males_votes', models.IntegerField()),
                ('total_abroad_votes', models.IntegerField()),
                ('advance_abroad_votes', models.IntegerField()),
                ('electionday_abroad_votes', models.IntegerField()),
                ('total_abroad_males_votes', models.IntegerField()),
                ('advance_abroad_males_votes', models.IntegerField()),
                ('electionday_abroad_males_votes', models.IntegerField()),
                ('total_approved_votes', models.IntegerField()),
                ('advance_approved_votes', models.IntegerField()),
                ('electionday_approved_votes', models.IntegerField()),
                ('total_invalid_votes', models.IntegerField()),
                ('advance_invalid_votes', models.IntegerField()),
                ('electionday_invalid_votes', models.IntegerField()),
                ('area', models.ForeignKey(related_name='votingdata', to='ed.Area')),
            ],
        ),
        migrations.CreateModel(
            name='VotingDataComparison',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('areatxt', models.CharField(max_length=80)),
                ('comparisontxt', models.CharField(max_length=80)),
                ('eligible_total', models.IntegerField()),
                ('eligible_men', models.IntegerField()),
                ('eligible_women', models.IntegerField()),
                ('eligible_finland_total', models.IntegerField()),
                ('eligible_finland_men', models.IntegerField()),
                ('eligible_finland_women', models.IntegerField()),
                ('total_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('advance_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('electionday_turnout', electiondata.ed.models.XPctField(max_digits=8, decimal_places=5)),
                ('total_approved_votes', models.IntegerField()),
                ('total_invalid_votes', models.IntegerField()),
                ('number_to_be_elected', models.IntegerField(null=True)),
                ('area', models.ForeignKey(related_name='votingdatacomparison', to='ed.Area')),
                ('comparison', models.ForeignKey(related_name='votingdatacomparison', to='ed.ComparisonElection')),
            ],
        ),
        migrations.AddField(
            model_name='candidateresults',
            name='nominator',
            field=models.ForeignKey(related_name='candidateresults', to='ed.Nominator'),
        ),
        migrations.AddField(
            model_name='candidatemembership',
            name='membership',
            field=models.ForeignKey(related_name='candidates', to='ed.Membership'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='nominator',
            field=models.ForeignKey(related_name='candidates', to='ed.Nominator'),
        ),
        migrations.AddField(
            model_name='alliancenominator',
            name='nominator',
            field=models.ForeignKey(related_name='alliances', to='ed.Nominator'),
        ),
        migrations.AddField(
            model_name='alliance',
            name='area',
            field=models.ForeignKey(related_name='alliances', to='ed.Area'),
        ),
    ]
